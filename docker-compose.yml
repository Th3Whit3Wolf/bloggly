version: "3.8"

services:
  database:
    image: postgres:14-alpine
    container_name: database
    restart: always
    environment:
      - DATABASE_HOST=${PG_HOST:-127.0.0.1}
      - POSTGRES_USER=${PG_USER:-postgres}
      - POSTGRES_PASSWORD=${PG_PASSWD:-docker}
      - POSTGRES_PORT=5432
      - POSTGRES_DB=bloggly
    ports:
      - "${PG_PORT-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg-data:/var/lib/postgresql/data
  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgresql://postgres:docker@database:5432/bloggly?schema=public
    volumes:
      - type: bind
        source: ./api/src
        target: /app/src
    
  ui:
    build: 
      context: .
      dockerfile: ui.Dockerfile
    depends_on:
      - "api"
    ports:
      - "3000:3000"   
    volumes:
      - type: bind
        source: ./ui/src
        target: /app/src

  prisma-studio:
    build:
      context: .
      dockerfile: api.Dockerfile
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8082:8081"
    environment:
      - DATABASE_URL=postgresql://postgres:docker@database:5432/bloggly?schema=public
    volumes:
      - type: bind
        source: ./api/prisma
        target: /app/prisma
    command: yarn run db:view -- --port 8081 --browser none